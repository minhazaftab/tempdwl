
OAuth2 Tokens in Discord Bots
=============================

üîê What Is OAuth2?
------------------
OAuth2 is an authorization framework that allows applications (like your Discord bot) to access user data securely and with their permission. Instead of asking users for their Discord password, your bot redirects them to Discord‚Äôs login page. Once they approve access, Discord sends back a token that your bot can use to access specific user data.

üß≠ Why Do You Need OAuth2 Tokens?
---------------------------------
In your case, you're trying to:
- Access the user's identity, including their primary_guild.
- Make decisions based on that identity (e.g., whether to assign or remove a role).

This data is private and not available through the regular bot API. You need the user's explicit permission via OAuth2 to access it.

üß∞ How OAuth2 Works in Discord
------------------------------
1. User clicks a login link generated by your bot or web app.
2. They‚Äôre redirected to Discord‚Äôs authorization page.
3. They approve the requested scopes (e.g., identify, guilds).
4. Discord redirects them back to your app with a temporary code.
5. Your app exchanges that code for an access token.
6. You use that token to make API requests on behalf of the user.

üîë Scopes You‚Äôll Need
---------------------
For your use case:
- identify: To get basic user info and primary_guild.
- guilds: (Optional) To check which guilds the user is in.

üß™ Example OAuth2 Flow
----------------------
Example login URL:
https://discord.com/oauth2/authorize?client_id=YOUR_CLIENT_ID&redirect_uri=YOUR_REDIRECT_URI&response_type=code&scope=identify

After the user logs in, you exchange the code for a token:

import requests

data = {
    "client_id": "YOUR_CLIENT_ID",
    "client_secret": "YOUR_CLIENT_SECRET",
    "grant_type": "authorization_code",
    "code": "CODE_FROM_DISCORD",
    "redirect_uri": "YOUR_REDIRECT_URI",
    "scope": "identify"
}

response = requests.post("https://discord.com/api/oauth2/token", data=data)
access_token = response.json()["access_token"]

üß≠ When Does the User Leave Discord?
-----------------------------------
The user is taken out of Discord only during the OAuth2 login flow, and it's a brief redirect to Discord's official authorization page.

1. Your bot or web app sends the user a login link.
2. The user clicks the link, which opens a Discord-hosted authorization page in their browser.
3. On that page, the user logs in (if not already logged in), sees what permissions your app is requesting, and clicks "Authorize".
4. After authorization, Discord redirects them back to your app with a temporary code.

üîê Why Is This Necessary?
-------------------------
Discord does not allow bots to access private user data like primary_guild directly. That data is protected and only accessible:
- With the user‚Äôs explicit permission.
- Through a secure OAuth2 flow.

This ensures:
- Privacy: Users control what data they share.
- Security: Tokens are short-lived and scoped.
- Compliance: Discord follows best practices for user data protection.
